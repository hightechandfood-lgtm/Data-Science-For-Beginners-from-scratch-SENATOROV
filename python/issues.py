# Список вопросов по работе с Issues на GitHub
#
# Общие вопросы
#
# 1.	Что такое Issues на GitHub и для чего они используются?
# Нужны для изучения кода и обучению программирования.
# Для сообщения о проблемах кода (bug report)
#
# 2.	Чем Issues отличаются от других инструментов управления задачами?
# Напрямую связаны с кодом и поддерживают автоматизацию
#
# 3.	Какие основные компоненты (поля) есть у каждого Issue?
# Assignees, labels, Projects, Milestone, Development, Notification, Linked Pull Requests/Commits
#
# Создание Issues
# 4.	Как создать новое Issue в репозитории?
# выделить нужный код - copy permalink
# заходим в issues - new issue - feature request - get started
# в названии пишем review code название файла, в descriprion вставляем выделенный код
#
# 5.	Какие данные рекомендуется указывать в описании Issue для лучшего понимания задачи?
# код ошибки
# трессировку из терминала
# скриншот из терминала
# краткое описание проблемы
# ключевые слова, по которы можно найти проблему.
#
# 6.	Какие теги (labels) можно добавить к Issue? Какие из них стандартные?
# bug, dependencies, documentation, duplicate, enhancement, good first issue, help wanted, invalid
#
# 7.	Как прикрепить Assignees (ответственных) к Issue?
# кнопка Assignees, где можно выбрать ответственных, выбрать там ответственного
#
# Работа с Issues
# 8.	Как использовать Labels для классификации задач?
# 1) Разделение по типу (bug, feature, refactor).
# 2) разделение по приоритету
# 3) по компонентам проекта
# 4) по статусу
#
# 9.	Для чего нужен Milestone, и как связать его с Issue?
# для определения сроков исправления проблемы.
#
# 10.	Как привязать Issue к пул-реквесту (Pull Request)?
# В описании PR написать: Fixes или Closes #номер_isssue
# В тайтле нужно указывать название и в круглых скобках номер ишьюса
# После мержа PR Issue закроется автоматически.
#
# 11.	Как добавить комментарий к существующему Issue?
# Внизу страницы Issue есть форма для комментариев. Можно добавить текст, код, картинки, ссылки.
#
# Закрытие и завершение Issues
# 12.	Как закрыть Issue вручную?
# Внизу или справа кнопка Close Issue.
#
# 13.	Можно ли автоматически закрыть Issue с помощью сообщения в коммите или пул-реквесте? Как это сделать?
# Да. В коммите или PR написать:Fixes #issue, Closes #issue, Resolves #Issue
#
# 14.	Как повторно открыть закрытое Issue, если работа ещё не завершена?
# Внизу есть кнопка Reopen issue
#
# Фильтрация и поиск
# 15.	Как найти все открытые или закрытые Issues в репозитории?
# Фильтры сверху: is:open или is:closed.
#
# 16.	Как использовать фильтры для поиска Issues по меткам, исполнителям или другим критериям?
# is:open label:bug - открытые баги
# assignee:username - задачи конкретного пользователя
# milestone:"v1.0" → задачи в конкретном релизе.
#
# 17.	Как сортировать Issues по приоритету, дате создания или другим параметрам?
# Menu - sort И выбрать по какому принципу сортировать
#
# Интеграции и автоматизация
# 18.	Как настроить автоматические уведомления о новых или изменённых Issues?
# Поставить звездочку репозиторию
#
# 19.	Что такое Projects в контексте GitHub, и как связать их с Issues?
# По сути канбан доска по типу трелло
#
# 20.	Какие сторонние инструменты можно использовать для автоматизации работы с Issues (например, боты, Webhooks)?
# GitHub Actions
#
# Коллаборация
# 21.	Как упомянуть другого пользователя в комментарии к Issue?
# Использовать @username.
#
# 22.	Как запросить дополнительные данные или уточнения у автора Issue?
# оставить комментарий к ишьюсу
#
# 23.	Что делать, если Issue неактуально или его нужно объединить с другим?
# Закрыть Issue с комментарием «Duplicate of #номер».
#
# Практические аспекты
# 24.	Как использовать шаблоны для создания Issues?
# В .github/ISSUE_TEMPLATE/ можно хранить markdown-файлы
#
# 25.	Что такое Linked Issues, и как создать связь между задачами?
# Это связанные задачи, они добавляются справа в поле Development → Link issues.
#
# 26.	Какие метрики (например, время выполнения) можно отслеживать с помощью Issues?
# Количество открытых/закрытых Issue.
# Среднее время закрытия (time to close).
# Количество комментариев.
#
# 27.	Какие best practices рекомендуются при работе с Issues в команде?
# Максимальное информативное название на английском
# Полезное описание
# Назначать ответственных
# Использовать Labels и Milestones
# Закрывать дубликаты
#
