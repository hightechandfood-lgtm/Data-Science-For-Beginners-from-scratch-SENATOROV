# Введение в Python и CPython
#
# 1. Что такое CPython и чем он отличается от Python?
# CPython - реализация Python, а Python - язык программирования, Сpython - программа, которая исполняет байт-код Python, Python - концепция, которая требует реализации и не зависит от языка реализации. Cpython интерпретирует функции и выполняет их, Python их описывает.
#
# 3. Сколько существует реализаций Python, и какая из них самая популярная?
# 6, самая популярная - cpython
#
# 4. На каком языке написан CPython?
# Написан на языке C
#
# Поиск и установка CPython
#
# 5. (опционально) Кто создал CPython? - Guido van Rossum
#
# 6. Почему Python считается быстрым, несмотря на то, что это интерпретируемый язык?
# Потому что его интерпретатор написан на C и вызывает все инструкции на C.
#
# 7. Напишите путь к Интерпретатору CPython на вашем компьютере
# C:\Users\admin\Desktop\cpython-3.12.11\cpython-3.12.11
#
# Структура CPython
#
# 8. Что содержится в папке include в CPython?
# abstract.h
#
#
# 9. Где можно найти исходный код CPython дайте ссылку на репозиторий гитхаб
# (опционально)
# https://github.com/python/cpython
#
# 10. Как работает интерпретатор CPython при выполнении кода?
# запускает код построчно
#
# Запуск файла с помощью CPython
#
# 11. Какая команда используется для запуска файла с помощью CPython?
# win+R - cmd
#
# 12. Можно ли запускать текстовые файлы через интерпретатор Python? Почему?
# Можно, потому что интерпретатору не важно расширение файла
#
# 13. Как указать путь к интерпретатору и файлу для выполнения кода?
# копируем путь к файлу python.exe и через пробел указываем путь до файла
#
# Введение в PyPy
#
# 14. Чем PyPy отличается от CPython?
# работает в 10 раз быстрее CPython
#
# 15. Почему PyPy не может использоваться для всех проектов на Python?
# Потому что это достаточно новый интерпретатор.
#
# 16. Где можно скачать PyPy?
# https://pypy.org
#
# Установка и запуск PyPy
#
# 17. Как установить PyPy после скачивания?
# скачиваем с сайта для своей ОС. Распаковать архив, запускаем файл exe (bin в MAC)
#
# 18. Как запустить файл с помощью PyPy?
# в cmd вставляем скопированный путь до интерпретатора, пробел, путь до файла, который хотим запустить.
#
# 19. Почему PyPy выполняет код быстрее, чем CPython?
# на сложных участках компилирует код в машинный, Cpython всегда выполняет код последовательно.
#
# Практические задания
# Задание 1: Поиск и установка CPython
#
# Проверьте, установлен ли CPython на вашем компьютере:
#     Используйте поиск в меню "Пуск" (Windows) или терминале (Linux/Mac).
#     Введите команду python --version или python3 --version в терминале.
# Если CPython не установлен, скачайте его с официального сайта Python https://www.python.org/downloads/ и установите.
#
# Установлено
#
# Задание 2: Исследование структуры CPython
#
# Найдите папку, где установлен Python (например, через команду which python в терминале или свойства ярлыка).
# Откройте папку include и изучите её содержимое. Какое количество файлов на C там есть?
#
# Их там нет. 0 файлов на С, все на h
#
# Перейдите на [GitHub-репозиторий CPython](https://github.com/python/cpython) и найдите файл README. Прочитайте информацию о проекте.
#
# Done
#
# Задание 3: Запуск файла с помощью CPython
#
# Создайте текстовый файл example.txt с содержимым:
# print("Hello from CPython!")
#
# Запустите файл через команду python <путь_до_файла> (замените <путь_до_файла> на фактический путь к вашему файлу).
#
# Проверьте, что выводится на экран. Попробуйте изменить расширение файла на .py и повторите запуск.
#
# выводится Hello from CPython! независимо от расширения файла.
#
# Задание 4: Установка и использование PyPy
#
# Перейдите на [официальный сайт PyPy](https://www.pypy.org/) и скачайте подходящую версию для вашей операционной системы.
# Распакуйте скачанный архив в удобное место.
# Создайте файл example_pypy.py с кодом:
# print("Hello from pypy!")
#
# Запустите файл через PyPy
# pypy <путь_до_файла> (замените <путь_до_файла> на фактический путь к вашему файлу).
#
# Проверьте, что выводится на экран. Попробуйте изменить расширение файла на .py и повторите запуск.
#
# Done
# выводится Hello from pypy! независимо от расширения файла.
#
# Задание 5: Сравнение производительности CPython и PyPy
#
# Создайте файл performance_test.py с кодом:
#     import time
#     start_time = time.time()
#     total = 0
#     for i in range(1, 10000000):
#         total += i
#     end_time = time.time()
#
#     print("Result:", total)
#     print("Execution time:", end_time - start_time, "seconds")
#
# Запустите этот файл сначала через CPython, а затем через PyPy.
#
# Запишите результаты времени выполнения для обоих интерпретаторов.
#
# Cpython - 2.2 сек
# Pypy - 1.2 сек
#
# Сделайте вывод о разнице в производительности.
# у pypy выше, особенно если запускать несколько раз.
#
#
