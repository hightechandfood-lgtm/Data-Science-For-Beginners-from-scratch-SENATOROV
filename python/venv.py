# 1. Что делает команда python -m venv venv? - создает окружение venv с папкой venv
# 1.1 Что делает каждая команда в списке ниже?
# pip list - показывает список пакетов в текущем окружении
# pip freeze > requirements.txt - вносит имеющиеся пакеты в файл requirements.txt
# pip install -r requirements.txt - устанавливает пакеты, перечисленные в файле requirements.txt
#
# Что делает каждая команда в списке ниже?
# conda env list - выдает список окружений conda
# conda create -n env_name python=3.5 - создает новое окружение env_name с версией питона 3.5
# conda env update -n env_name -file.yml - обновляет окружение по зависимостям, перечисленным в file.yml
# source activate env_name - активирует окружение conda env_name
# source deactivate - выходит из окружения
#
# conda clean -a - освобождение места в окружении
#
#
# вставьте скрин вашего терминала, где вы активировали сначала venv, потом conda, назовите окружение "SENATOROV"
#
# Как установить необходимые пакеты внутрь виртуального окружения для conda/venv?
# для venv - pip install numpy
# для conda - conda install numpy
#
# Что делают эти команды?
# pip freeze > requirements.txt - выгружает зависимости в requirements.txt
# conda env export > environment.yml - выгружает зависимости в environment.yml
#
# 5.1 вставьте скрин, где будет видна папка VENV в вашем репозитории а также файлы зависимостей requirements.txt и environment.yml, файлы должны содержать зависимости
#
# Что делают эти команды?
# pip install -r requirements.txt - устанавливает зависимости из requirements.txt в текущем окружении
# conda env create -f environment.yml. создает окружение из environment.yml
#
# Что делают эти команды?
# pip list - показывает список зависимостей в окружении
# pip show - подробная информация о пакетах (зависимости, версии)
# conda list - показывает список зависимостей в окружении conda
#
# Где по умолчанию больше пакетов venv/pip или conda? и почему дата сайнинисты используют conda?
# По умолчанию пакетов больше в conda, потому что они были изначально предустановлены для проектов DS. Удобнее conda потому что все необходимые пакеты уже предустановлены.
#
# вставьте скрин где будет видно, Выбор интерпретатора Python (conda) в VS Code/cursor
#
# добавьте в .gitignore папку SENATOROV
#
# Зачем нужно виртуально окружение?
# Для изоляции своей работы в своем окружении, для внесения изменений только в рамках своего окружения, не воздействуя на глобальный Python
#
# С этого момента надо работать в виртуальном окружении conda, ты научился(-ась) выгружать зависимости и работать с окружением? Да
#
# Удалите папку VENV, она больше не нужна, мы же не разрабы, нам нужна только conda - done
